var V=Object.defineProperty;var E=(r,n,o)=>n in r?V(r,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):r[n]=o;var x=(r,n,o)=>(E(r,typeof n!="symbol"?n+"":n,o),o);import{r as v,a as O,R as B}from"./react-H14vcryl.js";import{P as m}from"./phaser-pQREW5IE.js";(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function o(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function i(e){if(e.ep)return;e.ep=!0;const t=o(e);fetch(e.href,t)}})();var R={exports:{}},g={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var z=v,_=Symbol.for("react.element"),q=Symbol.for("react.fragment"),G=Object.prototype.hasOwnProperty,D=z.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,L={key:!0,ref:!0,__self:!0,__source:!0};function S(r,n,o){var i,e={},t=null,s=null;o!==void 0&&(t=""+o),n.key!==void 0&&(t=""+n.key),n.ref!==void 0&&(s=n.ref);for(i in n)G.call(n,i)&&!L.hasOwnProperty(i)&&(e[i]=n[i]);if(r&&r.defaultProps)for(i in n=r.defaultProps,n)e[i]===void 0&&(e[i]=n[i]);return{$$typeof:_,type:r,key:t,ref:s,props:e,_owner:D.current}}g.Fragment=q;g.jsx=S;g.jsxs=S;R.exports=g;var T=R.exports,y={},w=O;y.createRoot=w.createRoot,y.hydrateRoot=w.hydrateRoot;const c=new(window.AudioContext||window.webkitAudioContext);function I(){const r=c.sampleRate*.05,n=c.createBuffer(1,r,c.sampleRate),o=n.getChannelData(0);for(let d=0;d<r;d++)o[d]=Math.random()*2-1;const i=c.createBufferSource();i.buffer=n;const e=c.createBiquadFilter();e.type="highpass",e.frequency.setValueAtTime(8e3,c.currentTime),e.Q.setValueAtTime(1,c.currentTime);const t=c.createGain();t.gain.setValueAtTime(1,c.currentTime),t.gain.exponentialRampToValueAtTime(.001,c.currentTime+.05),i.connect(e),e.connect(t),t.connect(c.destination),i.start(),i.stop(c.currentTime+.05);const s=c.createOscillator();s.type="square",s.frequency.setValueAtTime(1e4,c.currentTime);const u=c.createGain();u.gain.setValueAtTime(.1,c.currentTime),u.gain.exponentialRampToValueAtTime(.001,c.currentTime+.03),s.connect(u),u.connect(c.destination),s.start(),s.stop(c.currentTime+.03)}const l=new(window.AudioContext||window.webkitAudioContext);function k(){const r=l.sampleRate*.2,n=l.createBuffer(1,r,l.sampleRate),o=n.getChannelData(0);for(let d=0;d<r;d++)o[d]=Math.random()*2-1;const i=l.createBufferSource();i.buffer=n;const e=l.createBiquadFilter();e.type="highpass",e.frequency.setValueAtTime(1e3,l.currentTime);const t=l.createGain();t.gain.setValueAtTime(1,l.currentTime),t.gain.exponentialRampToValueAtTime(.01,l.currentTime+.2),i.connect(e),e.connect(t),t.connect(l.destination),i.start(),i.stop(l.currentTime+.2);const s=l.createOscillator();s.type="sine",s.frequency.setValueAtTime(150,l.currentTime);const u=l.createGain();u.gain.setValueAtTime(.7,l.currentTime),u.gain.exponentialRampToValueAtTime(.01,l.currentTime+.1),s.connect(u),u.connect(l.destination),s.start(),s.stop(l.currentTime+.1)}const p=new(window.AudioContext||window.webkitAudioContext);function H(){const r=p.createOscillator();r.type="sine";const n=p.createGain();r.frequency.setValueAtTime(150,p.currentTime),r.frequency.exponentialRampToValueAtTime(60,p.currentTime+.1),n.gain.setValueAtTime(1,p.currentTime),n.gain.exponentialRampToValueAtTime(.001,p.currentTime+.5),r.connect(n),n.connect(p.destination),r.start(),r.stop(p.currentTime+.5)}const a=new(window.AudioContext||window.webkitAudioContext);function j(){const r=a.sampleRate*1.5,n=a.createBuffer(1,r,a.sampleRate),o=n.getChannelData(0);for(let h=0;h<r;h++)o[h]=Math.random()*2-1;const i=a.createBufferSource();i.buffer=n;const e=a.createBiquadFilter();e.type="highpass",e.frequency.setValueAtTime(4e3,a.currentTime);const t=a.createBiquadFilter();t.type="lowpass",t.frequency.setValueAtTime(12e3,a.currentTime);const s=a.createGain();s.gain.setValueAtTime(1,a.currentTime),s.gain.exponentialRampToValueAtTime(.001,a.currentTime+1.5),i.connect(e),e.connect(t),t.connect(s),s.connect(a.destination),i.start(),i.stop(a.currentTime+1.5);const u=a.createOscillator();u.type="triangle",u.frequency.setValueAtTime(1e4,a.currentTime);const d=a.createGain();d.gain.setValueAtTime(.05,a.currentTime),d.gain.exponentialRampToValueAtTime(.001,a.currentTime+1.5),u.connect(d),d.connect(a.destination),u.start(),u.stop(a.currentTime+1.5)}function W(){console.log("Recording started")}function C(){console.log("Recording stopped")}function N(){console.log("Loop played")}function M(){console.log("Loop stopped")}const $={idle:"#FFF",readyToRecord:"#0FF",recording:"#FD0041",playing:"#0F0"},A={fonts:$};class K extends m.Scene{constructor(){super(...arguments);x(this,"controls")}hexToColor(o){return m.Display.Color.HexStringToColor(o).color}create(){this.createPads(),this.createControlButtons()}createPads(){const o=[this.add.rectangle().setFillStyle(this.hexToColor("#FDA341")).on("pointerdown",()=>I()),this.add.rectangle().setFillStyle(this.hexToColor("#F24E1E")).on("pointerdown",()=>H()),this.add.rectangle().setFillStyle(this.hexToColor("#4A90E2")).on("pointerdown",()=>k()),this.add.rectangle().setFillStyle(this.hexToColor("#A0D8C5")).on("pointerdown",()=>j())];o.forEach(e=>e.setInteractive().setOrigin(0,0).on("pointerdown",()=>{e.setAlpha(.7),this.controls.state==="readyToRecord"&&(this.controls.state="recording",this.updateControlsText(),W())}).on("pointerup",()=>e.setAlpha(1)).on("pointerout",()=>e.setAlpha(1)));const i=()=>{const e=window.innerWidth,t=window.innerHeight;o[0].setSize(e/2,t/2).setPosition(0,0),o[1].setSize(e/2,t/2).setPosition(e/2,0),o[2].setSize(e/2,t/2).setPosition(0,t/2),o[3].setSize(e/2,t/2).setPosition(e/2,t/2)};window.addEventListener("resize",i),i()}createButton(){const o=this.add.rectangle().setFillStyle(this.hexToColor("#000")).setStrokeStyle(2,this.hexToColor("#FFF"),.8).setOrigin(0,0);return o.setInteractive().on("pointerdown",()=>o.setFillStyle(this.hexToColor("#666"))).on("pointerup",()=>o.setFillStyle(this.hexToColor("#000"))),o}createText(o){return this.add.text(0,0,o).setOrigin(.5,.5).setFontSize(20).setFontFamily("Arial").setAlign("center").setColor("#FFF").setData("initial",o)}createControlButtons(){this.controls={state:"idle",stop:{button:this.createButton(),text:this.createText("Stop")},record:{button:this.createButton(),text:this.createText("Record")},play:{button:this.createButton(),text:this.createText("Play")}};const{record:o,stop:i,play:e}=this.controls;o.button.setInteractive().on("pointerdown",()=>{this.controls.state==="idle"||this.controls.state==="playing"?(this.controls.state="readyToRecord",o.text.setText("Hit a pad to start")):this.controls.state==="readyToRecord"?(this.controls.state="idle",o.text.setText(o.text.getData("initial"))):this.controls.state==="recording"&&(this.controls.state="idle",C()),this.updateControlsText()}),i.button.setInteractive().on("pointerdown",()=>{this.controls.state==="recording"&&C(),this.controls.state==="playing"&&M(),this.controls.state="idle",this.updateControlsText()}),e.button.setInteractive().on("pointerdown",()=>{this.controls.state="playing",N(),this.updateControlsText()});const t=()=>{const s=window.innerWidth,u=window.innerHeight,d=Math.max(u,s)/15,h=s/3;[i,o,e].forEach(({button:f,text:b},P)=>{f.setSize(h,d).setPosition(h*P,-1),b.setFontSize(d/3).setWordWrapWidth(f.width,!0).setSize(f.width,f.height).setPosition(f.getCenter().x,f.getCenter().y)})};window.addEventListener("resize",t),t()}updateControlsText(){const{record:{text:o},stop:{text:i},play:{text:e}}=this.controls;[o,i,e].forEach(s=>s.setText(s.getData("initial")).setColor(A.fonts.idle));const t=A.fonts[this.controls.state];switch(this.controls.state){case"idle":break;case"readyToRecord":o.setText("Hit a pad to start").setColor(t);break;case"recording":o.setText("Recording...").setColor(t);break;case"playing":e.setText("Playing...").setColor(t);break}}}function U(r){const n=window.innerWidth,o=window.innerHeight;r.scale.resize(n,o),r.scene.scenes.forEach(i=>{var e,t;return(t=(e=i.sys)==null?void 0:e.scale)==null?void 0:t.refresh()})}let F=!1;const J=()=>{if(!F){F=!0;const r=new m.Game({type:m.AUTO,mode:m.Scale.RESIZE,parent:"phaser-container",width:window.innerWidth,height:window.innerHeight,backgroundColor:"#FFF",scene:[K],input:{activePointers:4}});window.addEventListener("resize",()=>{U(r)})}return T.jsx(T.Fragment,{})};function Q(){return T.jsx(J,{})}y.createRoot(document.getElementById("root")).render(T.jsx(B.StrictMode,{children:T.jsx(Q,{})}));
