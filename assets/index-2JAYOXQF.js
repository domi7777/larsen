var _=Object.defineProperty;var L=(i,o,t)=>o in i?_(i,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[o]=t;var B=(i,o,t)=>(L(i,typeof o!="symbol"?o+"":o,t),t);import{r as I,a as $,R as H}from"./react-H14vcryl.js";import{P as x}from"./phaser-pQREW5IE.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))e(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&e(s)}).observe(document,{childList:!0,subtree:!0});function t(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function e(n){if(n.ep)return;n.ep=!0;const r=t(n);fetch(n.href,r)}})();var k={exports:{}},C={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var j=I,M=Symbol.for("react.element"),W=Symbol.for("react.fragment"),U=Object.prototype.hasOwnProperty,K=j.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,J={key:!0,ref:!0,__self:!0,__source:!0};function G(i,o,t){var e,n={},r=null,s=null;t!==void 0&&(r=""+t),o.key!==void 0&&(r=""+o.key),o.ref!==void 0&&(s=o.ref);for(e in o)U.call(o,e)&&!J.hasOwnProperty(e)&&(n[e]=o[e]);if(i&&i.defaultProps)for(e in o=i.defaultProps,o)n[e]===void 0&&(n[e]=o[e]);return{$$typeof:M,type:i,key:r,ref:s,props:n,_owner:K.current}}C.Fragment=W;C.jsx=G;C.jsxs=G;k.exports=C;var A=k.exports,b={},q=$;b.createRoot=q.createRoot,b.hydrateRoot=q.hydrateRoot;const l=new(window.AudioContext||window.webkitAudioContext);function Q(){const i=l.sampleRate*.05,o=l.createBuffer(1,i,l.sampleRate),t=o.getChannelData(0);for(let d=0;d<i;d++)t[d]=Math.random()*2-1;const e=l.createBufferSource();e.buffer=o;const n=l.createBiquadFilter();n.type="highpass",n.frequency.setValueAtTime(8e3,l.currentTime),n.Q.setValueAtTime(1,l.currentTime);const r=l.createGain();r.gain.setValueAtTime(1,l.currentTime),r.gain.exponentialRampToValueAtTime(.001,l.currentTime+.05),e.connect(n),n.connect(r),r.connect(l.destination),e.start(),e.stop(l.currentTime+.05);const s=l.createOscillator();s.type="square",s.frequency.setValueAtTime(1e4,l.currentTime);const a=l.createGain();a.gain.setValueAtTime(.1,l.currentTime),a.gain.exponentialRampToValueAtTime(.001,l.currentTime+.03),s.connect(a),a.connect(l.destination),s.start(),s.stop(l.currentTime+.03)}const u=new(window.AudioContext||window.webkitAudioContext);function Y(){const i=u.sampleRate*.2,o=u.createBuffer(1,i,u.sampleRate),t=o.getChannelData(0);for(let d=0;d<i;d++)t[d]=Math.random()*2-1;const e=u.createBufferSource();e.buffer=o;const n=u.createBiquadFilter();n.type="highpass",n.frequency.setValueAtTime(1e3,u.currentTime);const r=u.createGain();r.gain.setValueAtTime(1,u.currentTime),r.gain.exponentialRampToValueAtTime(.01,u.currentTime+.2),e.connect(n),n.connect(r),r.connect(u.destination),e.start(),e.stop(u.currentTime+.2);const s=u.createOscillator();s.type="sine",s.frequency.setValueAtTime(150,u.currentTime);const a=u.createGain();a.gain.setValueAtTime(.7,u.currentTime),a.gain.exponentialRampToValueAtTime(.01,u.currentTime+.1),s.connect(a),a.connect(u.destination),s.start(),s.stop(u.currentTime+.1)}const Z=()=>{const i=window.AudioContext||window.webkitAudioContext;return new i};function X(){const i=Z(),o=i.createOscillator();o.type="sine";const t=i.createGain();o.frequency.setValueAtTime(200,i.currentTime),o.frequency.exponentialRampToValueAtTime(70,i.currentTime+.05),t.gain.setValueAtTime(1,i.currentTime),t.gain.exponentialRampToValueAtTime(.001,i.currentTime+1),o.connect(t),t.connect(i.destination),o.start(),o.stop(i.currentTime+1.5)}const c=new(window.AudioContext||window.webkitAudioContext);function ee(){const i=c.sampleRate*1.5,o=c.createBuffer(1,i,c.sampleRate),t=o.getChannelData(0);for(let h=0;h<i;h++)t[h]=Math.random()*2-1;const e=c.createBufferSource();e.buffer=o;const n=c.createBiquadFilter();n.type="highpass",n.frequency.setValueAtTime(4e3,c.currentTime);const r=c.createBiquadFilter();r.type="lowpass",r.frequency.setValueAtTime(12e3,c.currentTime);const s=c.createGain();s.gain.setValueAtTime(1,c.currentTime),s.gain.exponentialRampToValueAtTime(.001,c.currentTime+1.5),e.connect(n),n.connect(r),r.connect(s),s.connect(c.destination),e.start(),e.stop(c.currentTime+1.5);const a=c.createOscillator();a.type="triangle",a.frequency.setValueAtTime(1e4,c.currentTime);const d=c.createGain();d.gain.setValueAtTime(.05,c.currentTime),d.gain.exponentialRampToValueAtTime(.001,c.currentTime+1.5),a.connect(d),d.connect(c.destination),a.start(),a.stop(c.currentTime+1.5)}const y=i=>x.Display.Color.HexStringToColor(i).color,p=new(window.AudioContext||window.webkitAudioContext);function te(){const i=p.sampleRate*.5,o=p.createBuffer(1,i,p.sampleRate),t=o.getChannelData(0);for(let a=0;a<i;a++)t[a]=Math.random()*2-1;const e=p.createBufferSource();e.buffer=o;const n=p.createBiquadFilter();n.type="highpass",n.frequency.setValueAtTime(5e3,p.currentTime);const r=p.createBiquadFilter();r.type="lowpass",r.frequency.setValueAtTime(1e4,p.currentTime);const s=p.createGain();s.gain.setValueAtTime(.6,p.currentTime),s.gain.exponentialRampToValueAtTime(.001,p.currentTime+.5),e.connect(n),n.connect(r),r.connect(s),s.connect(p.destination),e.start(),e.stop(p.currentTime+.5)}const m=new(window.AudioContext||window.webkitAudioContext);function oe(){const i=m.sampleRate*1.2,o=m.createBuffer(1,i,m.sampleRate),t=o.getChannelData(0);for(let a=0;a<i;a++)t[a]=Math.random()*2-1;const e=m.createBufferSource();e.buffer=o;const n=m.createBiquadFilter();n.type="highpass",n.frequency.setValueAtTime(3e3,m.currentTime);const r=m.createBiquadFilter();r.type="lowpass",r.frequency.setValueAtTime(9e3,m.currentTime);const s=m.createGain();s.gain.setValueAtTime(.8,m.currentTime),s.gain.exponentialRampToValueAtTime(.001,m.currentTime+1.2),e.connect(n),n.connect(r),r.connect(s),s.connect(m.destination),e.start(),e.stop(m.currentTime+1.2)}const T=new(window.AudioContext||window.webkitAudioContext);function N(i=99,o=500){const t=T.createOscillator();t.type="sine",t.frequency.setValueAtTime(i,T.currentTime);const e=T.createGain();e.gain.setValueAtTime(1,T.currentTime),e.gain.exponentialRampToValueAtTime(.001,T.currentTime+.5),t.detune.setValueAtTime(-5,T.currentTime),t.connect(e),e.connect(T.destination),t.start(),t.stop(T.currentTime+o/1e3)}function ne(){N(120,400)}let S=!1,V=0,g=[],w=0,P=null;function ie(){S=!0,V=Date.now(),g=[],console.log("Recording started")}function R(){S=!1,g.push({instrument:null,time:Date.now()-V}),console.log("Recording stopped")}function re(){const i=()=>{w>=g.length&&(w=0);const{instrument:o,time:t}=g[w],e=w===0?0:g[w-1].time;P=setTimeout(()=>{console.log(`Playing ${o} after ${t}ms`),o&&z(o),w++,i()},t-e)};console.log("Loop play starting"),i()}function O(){P&&clearTimeout(P),console.log("Loop stopped")}const se={hihat:Q,kick:X,snare:Y,crash:ee,"hihat-open":te,ride:oe,"tom-low":N,"tom-high":ne},z=i=>{if(console.log(`Playing ${i}`),se[i](),S){const o=Date.now()-V;g.push({instrument:i,time:o}),console.log(`Recording ${i} at time ${o}ms`)}},ae={hihat:"#FDA341",kick:"#F24E1E",snare:"#4A90E2",crash:"#A0D8C5","hihat-open":"#F9F871",ride:"#F5C542","tom-low":"#FF7F50","tom-high":"#9B59B6"},v={idle:"#FFF",readyToRecord:"#0FF",recording:"#FD0041",playing:"#0F0"};class ce extends x.Scene{constructor(){super(...arguments);B(this,"controls")}create(){this.createPads(),this.createControlButtons()}createPads(){const t=[this.createPad("crash"),this.createPad("ride"),this.createPad("hihat-open"),this.createPad("hihat"),this.createPad("snare"),this.createPad("tom-low"),this.createPad("tom-high"),this.createPad("kick")],e=()=>{const s=window.innerWidth/4,a=window.innerHeight/2;t.forEach(({button:d},h)=>{const f=h%4*s,F=Math.floor(h/4)*a;d.setSize(s,a).setPosition(f,F)})};window.addEventListener("resize",e),e()}createPad(t){const e=this.add.rectangle().setFillStyle(y(ae[t])).setStrokeStyle(2,y("#FFF"),.8).setInteractive().setOrigin(0,0);return e.on("pointerdown",()=>{e.setAlpha(.7),this.controls.state==="readyToRecord"&&(this.controls.state="recording",this.updateControlsText(),ie()),z(t)}).on("pointerup",()=>e.setAlpha(1)).on("pointerout",()=>e.setAlpha(1)),{instrument:t,button:e}}createControlButton(){const t=this.add.rectangle().setFillStyle(y("#000")).setStrokeStyle(2,y("#FFF"),.8).setOrigin(0,0);return t.setInteractive().on("pointerdown",()=>t.setFillStyle(y("#666"))).on("pointerup",()=>t.setFillStyle(y("#000"))),t}createText(t){return this.add.text(0,0,t).setOrigin(.5,.5).setFontSize(20).setFontFamily("Arial").setAlign("center").setColor("#FFF").setData("initial",t)}createControlButtons(){this.controls={state:"idle",stop:{button:this.createControlButton(),text:this.createText("Stop")},record:{button:this.createControlButton(),text:this.createText("Record")},play:{button:this.createControlButton(),text:this.createText("Play")}};const{record:t,stop:e,play:n}=this.controls;t.button.setInteractive().on("pointerdown",()=>{this.controls.state==="idle"||this.controls.state==="playing"?(O(),this.controls.state="readyToRecord"):this.controls.state==="readyToRecord"?this.controls.state="idle":this.controls.state==="recording"&&(this.controls.state="idle",R()),this.updateControlsText()}),e.button.setInteractive().on("pointerdown",()=>{this.controls.state==="recording"&&R(),this.controls.state==="playing"&&O(),this.controls.state="idle",this.updateControlsText()}),n.button.setInteractive().on("pointerdown",()=>{this.controls.state==="recording"&&R(),g.length>0?(this.controls.state="playing",re(),this.updateControlsText()):(this.controls.state="idle",this.updateControlsText(),console.log("No loop to play"),this.controls.play.text.setText("No loop to play, record first"),this.time.delayedCall(2e3,()=>{this.updateControlsText()}))});const r=()=>{const s=window.innerWidth,a=window.innerHeight,d=Math.max(a,s)/15,h=s/3;[e,t,n].forEach(({button:f,text:F},D)=>{f.setSize(h,d).setPosition(h*D,-1),F.setFontSize(d/3).setWordWrapWidth(f.width,!0).setSize(f.width,f.height).setPosition(f.getCenter().x,f.getCenter().y)})};window.addEventListener("resize",r),r()}updateControlsText(){const{record:{text:t},stop:{text:e},play:{text:n}}=this.controls;[t,e,n].forEach(s=>s.setText(s.getData("initial")).setColor(v.idle));const r=v[this.controls.state];switch(this.controls.state){case"idle":break;case"readyToRecord":t.setText("Hit a pad to start").setColor(r);break;case"recording":t.setText("Recording...").setColor(r);break;case"playing":n.setText("Playing...").setColor(r);break}}}function le(i){const o=window.innerWidth,t=window.innerHeight;i.scale.resize(o,t),i.scene.scenes.forEach(e=>{var n,r;return(r=(n=e.sys)==null?void 0:n.scale)==null?void 0:r.refresh()})}let E=!1;const ue=()=>{if(!E){E=!0;const i=new x.Game({type:x.AUTO,mode:x.Scale.RESIZE,parent:"phaser-container",width:window.innerWidth,height:window.innerHeight,backgroundColor:"#FFF",scene:[ce],input:{activePointers:4}});window.addEventListener("resize",()=>{le(i)})}return A.jsx(A.Fragment,{})};function de(){return A.jsx(ue,{})}b.createRoot(document.getElementById("root")).render(A.jsx(H.StrictMode,{children:A.jsx(de,{})}));
