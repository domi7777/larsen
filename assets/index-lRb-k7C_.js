var S=Object.defineProperty;var C=(i,n,r)=>n in i?S(i,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):i[n]=r;var y=(i,n,r)=>(C(i,typeof n!="symbol"?n+"":n,r),r);import{r as B,a as F,R as V}from"./react-H14vcryl.js";import{P as p}from"./phaser-pQREW5IE.js";(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&o(s)}).observe(document,{childList:!0,subtree:!0});function r(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function o(e){if(e.ep)return;e.ep=!0;const t=r(e);fetch(e.href,t)}})();var A={exports:{}},h={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var O=B,P=Symbol.for("react.element"),E=Symbol.for("react.fragment"),b=Object.prototype.hasOwnProperty,v=O.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,_={key:!0,ref:!0,__self:!0,__source:!0};function R(i,n,r){var o,e={},t=null,s=null;r!==void 0&&(t=""+r),n.key!==void 0&&(t=""+n.key),n.ref!==void 0&&(s=n.ref);for(o in n)b.call(n,o)&&!_.hasOwnProperty(o)&&(e[o]=n[o]);if(i&&i.defaultProps)for(o in n=i.defaultProps,n)e[o]===void 0&&(e[o]=n[o]);return{$$typeof:P,type:i,key:t,ref:s,props:e,_owner:v.current}}h.Fragment=E;h.jsx=R;h.jsxs=R;A.exports=h;var f=A.exports,w={},g=F;w.createRoot=g.createRoot,w.hydrateRoot=g.hydrateRoot;const c=new(window.AudioContext||window.webkitAudioContext);function z(){const i=c.sampleRate*.05,n=c.createBuffer(1,i,c.sampleRate),r=n.getChannelData(0);for(let d=0;d<i;d++)r[d]=Math.random()*2-1;const o=c.createBufferSource();o.buffer=n;const e=c.createBiquadFilter();e.type="highpass",e.frequency.setValueAtTime(8e3,c.currentTime),e.Q.setValueAtTime(1,c.currentTime);const t=c.createGain();t.gain.setValueAtTime(1,c.currentTime),t.gain.exponentialRampToValueAtTime(.001,c.currentTime+.05),o.connect(e),e.connect(t),t.connect(c.destination),o.start(),o.stop(c.currentTime+.05);const s=c.createOscillator();s.type="square",s.frequency.setValueAtTime(1e4,c.currentTime);const l=c.createGain();l.gain.setValueAtTime(.1,c.currentTime),l.gain.exponentialRampToValueAtTime(.001,c.currentTime+.03),s.connect(l),l.connect(c.destination),s.start(),s.stop(c.currentTime+.03)}const u=new(window.AudioContext||window.webkitAudioContext);function q(){const i=u.sampleRate*.2,n=u.createBuffer(1,i,u.sampleRate),r=n.getChannelData(0);for(let d=0;d<i;d++)r[d]=Math.random()*2-1;const o=u.createBufferSource();o.buffer=n;const e=u.createBiquadFilter();e.type="highpass",e.frequency.setValueAtTime(1e3,u.currentTime);const t=u.createGain();t.gain.setValueAtTime(1,u.currentTime),t.gain.exponentialRampToValueAtTime(.01,u.currentTime+.2),o.connect(e),e.connect(t),t.connect(u.destination),o.start(),o.stop(u.currentTime+.2);const s=u.createOscillator();s.type="sine",s.frequency.setValueAtTime(150,u.currentTime);const l=u.createGain();l.gain.setValueAtTime(.7,u.currentTime),l.gain.exponentialRampToValueAtTime(.01,u.currentTime+.1),s.connect(l),l.connect(u.destination),s.start(),s.stop(u.currentTime+.1)}const m=new(window.AudioContext||window.webkitAudioContext);function G(){const i=m.createOscillator();i.type="sine";const n=m.createGain();i.frequency.setValueAtTime(150,m.currentTime),i.frequency.exponentialRampToValueAtTime(60,m.currentTime+.1),n.gain.setValueAtTime(1,m.currentTime),n.gain.exponentialRampToValueAtTime(.001,m.currentTime+.5),i.connect(n),n.connect(m.destination),i.start(),i.stop(m.currentTime+.5)}const a=new(window.AudioContext||window.webkitAudioContext);function L(){const i=a.sampleRate*1.5,n=a.createBuffer(1,i,a.sampleRate),r=n.getChannelData(0);for(let T=0;T<i;T++)r[T]=Math.random()*2-1;const o=a.createBufferSource();o.buffer=n;const e=a.createBiquadFilter();e.type="highpass",e.frequency.setValueAtTime(4e3,a.currentTime);const t=a.createBiquadFilter();t.type="lowpass",t.frequency.setValueAtTime(12e3,a.currentTime);const s=a.createGain();s.gain.setValueAtTime(1,a.currentTime),s.gain.exponentialRampToValueAtTime(.001,a.currentTime+1.5),o.connect(e),e.connect(t),t.connect(s),s.connect(a.destination),o.start(),o.stop(a.currentTime+1.5);const l=a.createOscillator();l.type="triangle",l.frequency.setValueAtTime(1e4,a.currentTime);const d=a.createGain();d.gain.setValueAtTime(.05,a.currentTime),d.gain.exponentialRampToValueAtTime(.001,a.currentTime+1.5),l.connect(d),d.connect(a.destination),l.start(),l.stop(a.currentTime+1.5)}class D extends p.Scene{constructor(){super(...arguments);y(this,"recordButton")}hexToColor(r){return p.Display.Color.HexStringToColor(r).color}create(){this.createPads(),this.createRecordButton()}createPads(){const r=[this.add.rectangle().setFillStyle(this.hexToColor("#FDA341")).on("pointerdown",()=>z()),this.add.rectangle().setFillStyle(this.hexToColor("#F24E1E")).on("pointerdown",()=>G()),this.add.rectangle().setFillStyle(this.hexToColor("#4A90E2")).on("pointerdown",()=>q()),this.add.rectangle().setFillStyle(this.hexToColor("#A0D8C5")).on("pointerdown",()=>L())];r.forEach(e=>e.setInteractive().setOrigin(0,0).on("pointerdown",()=>{e.setAlpha(.7),this.tweens.add({targets:e,alpha:1,duration:250})}));const o=()=>{const e=window.innerWidth,t=window.innerHeight;r[0].setSize(e/2,t/2).setPosition(0,0),r[1].setSize(e/2,t/2).setPosition(e/2,0),r[2].setSize(e/2,t/2).setPosition(0,t/2),r[3].setSize(e/2,t/2).setPosition(e/2,t/2)};window.addEventListener("resize",o),o()}createRecordButton(){const r=this.add.rectangle().setFillStyle(this.hexToColor("#000000")).setOrigin(0,0);this.recordButton=this.add.circle().setFillStyle(this.hexToColor("#FD0041")).setOrigin(.5,0);let o=!1,e;[r,this.recordButton].forEach(s=>{s.setInteractive().on("pointerdown",()=>{o=!o,this.recordButton.setAlpha(.7),this.tweens.add({targets:this.recordButton,alpha:1,duration:250}),o?e=this.tweens.add({targets:this.recordButton,alpha:.5,duration:750,repeat:-1,yoyo:!0,ease:"Sine.easeInOut"}):(e.stop(),this.recordButton.setAlpha(1))})});const t=()=>{const s=window.innerWidth,l=window.innerHeight;let d=Math.max(l,s)/20;r.setSize(s,d).setPosition(0,0),this.recordButton.setRadius(d/2-5).setPosition(s/2,5).setStrokeStyle(d/20,this.hexToColor("#FFF"),.8)};window.addEventListener("resize",t),t()}}function I(i){const n=window.innerWidth,r=window.innerHeight;i.scale.resize(n,r),i.scene.scenes.forEach(o=>{var e,t;return(t=(e=o.sys)==null?void 0:e.scale)==null?void 0:t.refresh()})}let x=!1;const j=()=>{if(!x){x=!0;const i=new p.Game({type:p.AUTO,mode:p.Scale.RESIZE,parent:"phaser-container",width:window.innerWidth,height:window.innerHeight,backgroundColor:"#FFF",scene:[D],input:{activePointers:4}});window.addEventListener("resize",()=>{I(i)})}return f.jsx(f.Fragment,{})};function k(){return f.jsx(j,{})}w.createRoot(document.getElementById("root")).render(f.jsx(V.StrictMode,{children:f.jsx(k,{})}));
